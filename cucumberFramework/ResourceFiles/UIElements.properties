//***************************LoginPage***********************************

//Textbox
UserName =  //input[@name='login_username']
Password = //input[@name='login_password']
NewPassword = //input[@placeholder='New Password']
ConfirmNewPassword = //input[@placeholder='Confirm New Password']


//Buttons
LoginButton = //button[@class='btn btn-info btn-block spacer']
ResetPasswordSubmitBtn = //button[text()='SUBMIT']

//TextMessage
LoginMessage = //div[@class='ng-binding']/p
LoginFailureMsg = //*[@id='login']//span[text()='Authentication Error.  Please try again.']

//******************************ToastersMessages**********************************************
NonJsonFileUploadedErrorMessage = //*[text()='The file type is invalid. Please upload a valid exported \".json\" file.']
InvalidJsonFileUploadedErrorMessage = //*[text()='The file is invalid. Please upload a valid exported file.']

//ConfirmationMessages
PlaybookDeactivatedSuccessfullyConfirmationMessage =  //*[contains(text(),'playbook deactivated')]
PlaybookActivatedSuccessfullyConfirmationMessage =  //*[contains(text(),'playbook activated')]

//****************************Administration-LHPanel******************************************

SysSysConfig = //a[text()='System Configuration']
SysAuditLog = //a[text()='Audit Log']
SecurityTeamHierarchy = //a[text()='Team Hierarchy']
SecurityTeams = //a[text()='Teams']
SecurityRoles = //a[text()='Roles']
SecurityUsers = //a[text()='Users']
SecurityAppliances = //a[text()='Appliances']
SecurityAuthentication = //a[text()='Authentication']
SecuritySecrets = //a[text()='Secrets']
AppEditorModules = //a[text()='Modules']
AppEditorPicklists = //a[text()='Picklists']
AppEditorNavigation = //a[text()='Navigation']
AppEditorQuickAdd = //a[text()='Quick Add']

//**************************Common-Tables-Textboxes*************************************
//Table
ModuleRecordsCheckboxTable = //div[contains(@class,'left ui-grid-render-container')]/div[contains(@class,'viewport')]/div/div/div/div/div/div/div/div

//TextBoxes
ConfirmActionPopupTitleTxt = //div[@class='modal-header']/*[text()='Confirm']

//SearchFilter
GridSearchFilterTxt = //input[@id='search' and contains(@class,'grid')]

//***************************Common-Buttons***********************************

//Page-button
SubmitBtn = //button[@data-ng-bind='::submitDisplay' and contains(text(),'Save')and not(contains(@class,'ng-hide'))]
DeleteBtn = //*[@id='delete-btn' and not(contains(@class,'ng-hide'))]
RefreshBtn = //*[@id='add-btn' and @data-ng-click='refresh()' and not(contains(@class,'ng-hide'))]
CloneBtn = //*[@id='clone-btn'and not(contains(@class,'ng-hide'))]
AddNewBtn = //button[@id='add-btn' and contains(text(),'Add')and not(contains(@class,'ng-hide'))]
ModuleCancelBtn = //*[@id='admin-pane']//button[contains(text(),'Cancel')]
SaveBtn = //*[@id='admin-pane']//button[text()='Save']
EditRecordButton = //button[@id='breadcrumb-actions-edit' and not(contains(@class,'ng-hide'))]
ExportBtn = //button[text()='Export']
ImportBtn = //button[contains(text(),'Import')]
ModuleImportBtn = //*[@id='btn-import']
BreadCrumbCancelButton = //button[@id='breadcrumb-cancel' and text()='Cancel']

//popup-button
PopUpCancelBtn = //*[@id='btn-cancel']
PopUpOkBtn = //button[contains(text(),'OK')]
PopUpSaveBtn = //div[@class='modal-footer']/button[text()='Save']
PopUpImportBtn = //div[@class='modal-footer']/button[contains(text(),'Import')]
PopupSubmitBtn = //div[@class='modal-footer']/button[text()='Submit']

//ChangeViewButton-ChangesTheviewOfTheTable
BtnDetailListView = //span[@class='fa fa-th-list']
BtnDetailCardView = //span[@class='fa fa-th-large']

//Buttons-Inside-Module
ModuleCloneBtn = //*[@id='btn-clone']

//Icon
FileUploadIcon = //*[contains(text(),'or click to use standard uploader')]

//Playbook-and-RuleEngin
EditCollectionNameBtn = //button[@id='edit-name']//*[@class='fa fa-pencil']

//link-Lookupsearch
LookupSearchLinkArray = //ul[@class='dropdown-menu ng-scope']//a
//**************************Common-Textbox******************
//Playbook-and-RuleEngin
EditCollectionNameTxt = //div[@class='form-container']//input[@id='name']

//CommonPopUpWindowPath-RestNeededtobeAddedforSpecificElementinThePopupWindow
PopupWindow = //div[@class='modal-header']
//**************************Common-GridTable-Elements******************

//Checkbox
GridTableCheckbox = //div[contains(@class,'left ui-grid-render-container')]/div[contains(@class,'viewport')]/div/div/div/div/div/div/div/div
ListModulesTable = //*[contains(@id,'-uiGrid-')]/div
SelectAllTableRecordsCheckbox = //div[@class='ui-grid-cell-contents' and @col-index='renderIndex']/div

//***************************HomePage***********************************

//Images
HomePageWordLogo = //a[contains(@class,'logo logo-wordmark cursor') and contains(@class,'fadeIn')]
HomePageIconLogo = //a[contains(@class,'logo logo-icon cursor') and contains(@class,'fadeIn')]

//Link
OrchestrationPB = //a[@title='Orchestration and Playbooks' and @class='ng-scope']
LinkHome = //li[@aria-hidden='false']//span[text()='Home']
LinkIncidentManagement = //li[@aria-hidden='false']//span[text()='Incident Management']
LinkCaseManagement = //li[@aria-hidden='false']//span[text()='Case Management']
LinkVulnerabilityManagement = //li[@aria-hidden='false']//span[text()='Vulnerability Management']
LinkThreatManagement = //li[@aria-hidden='false']//span[text()='Threat Management']
LinkLegalManagement = //li[@aria-hidden='false']//span[text()='Legal Management']
LinkResources = //li[@aria-hidden='false']//span[text()='Resources']
LinkRuleEngine = //li[@aria-hidden='false']//span[text()='Rule Engine']
LinkOrchestrationPB = //li[@aria-hidden='false']//span[text()='Orchestration and Playbooks']
LinkKnowledgeCenter = //li[@aria-hidden='false']//span[text()='Knowledge Center']
LinkUntitled = //li[@aria-hidden='false']//span[text()='Untitled']
IconUntitled = //li[@aria-hidden='false']//span[text()='Untitled']/../span[not(text()='Untitled')]

//BelowORwhenNavigationPanIsCollapsed
CollapsedOrchestrationPB=//a[@title='Orchestration and Playbooks' and @class='ng-binding ng-scope']

UserProfileMenu = //*[@data-ng-bind='user.displayName']
Logout 			= //a[@href='/logout']
EditProfile 	= //a[@id='edit-profile-link']
Administration 	= //a[@id='administration-links'] 
SystemConfiguration = //a[@id='settings-link']
SecurityManagement 	= //a[@id='security-link']
ApplicationEditor 	= //a[@id='application-link']
Events = //ul[contains(@class,'accordion')]/li/a[@href='/modules/events']
Alerts = //ul[contains(@class,'accordion')]/li/a[@href='/modules/alerts']
Incidents = //ul[contains(@class,'accordion')]/li/a[@href='/modules/incidents']
Tasks = //ul[contains(@class,'accordion')]/li/a[@href='/modules/tasks']


//buttons
HomeAddNewPBbtn 	= //button[@id='btn-newChild']
SaveNewPB 			= //div[@class='modal-footer']/button[contains(text(),'Save')]
addNewCollection 	= //button[@id='btn-newCollection']
CollAddNewPBbtn 	= //button[@id='btn-new']


//TextBoxes
Nametxt = //input[@id='name']
CollectionName = //input[@id='collection']

//textarea
CollectionDescription = //textarea[@id='description']

	
//Checkbox
ActiveCheckbox = //input[@id='isActive' and @data-ng-show='::!placeholder']
HomePBActiveCheckbox = //input[@id='isActive'and contains(@class,'ng-touched')]
//Images
NewCollectionUploadedImage = //img[contains(@class,'collections-image') and @data-ng-show = 'image && !processing']

//Icons
CollectionChangeImageIcon = //span[contains(@class,'collections-image muted')]
CollectionUploadImageIcon = //*[text()='or click to use standard uploader']

//LeftPaneView-Link
SystemSysConf = //*[@id='admin']//a[contains(text(), 'System Configuration')]
SystemAuditLog = //*[@id='admin']//a[contains(text(), 'Audit Log')]
SecurityMgmtUser = //*[@id='admin']//a[contains(text(), 'Users')]
SecurityMgmtTeams = //*[@id='admin']//a[contains(text(),'Teams')]
SecurityMgmtTeamHierarchy = //*[@id='admin']//a[contains(text(),'Team Hierarchy')]
SecurityMgmtRoles = //*[@id='admin']//a[text()='Roles']
SecurityMgmtAppliance = //*[@id='admin']//a[text()='Appliances']
SecurityMgmtAuthentication = //*[@id='admin']//a[text()='Authentication']

//DropDown
SelectContactNoDefaultCountry = //*[@id='country']

//*****************************PlaybookPage******************************

//Link
PBLink = //span[text()='Orchestration and Playbooks']

//textbox
stepName = //input[@id='stepName']
mailSubjectText = //input[@id='subject']
mailContent = //textarea[@id='email-content']
playbookReference = //*[contains(text(),'Select')]/../..//li//input
playbookTag = //div[@class='form-group ng-scope']/div/input[@id='tag']
InsertDataModelName = //div[@data-ng-model='field.value']/input[@id='name']	 
ImportCollectionErrorUniqueName = //label[contains(text(),'Playbook Collection Name')]/../input
InsertDataNameTxt = //label[@for='name']/../div/input[@name='name']
MoveToCollectionSearchTxt = //*[contains(text(),'Move to collection')]/..//button[contains(text(),'Select')]/../..//input

//ErrorMessages
ImportCollectionUniqueName = //label[contains(text(),'Playbook Collection Name')]/..//*[text()='This field must have a unique value.']
	 
//buttons
stepSaveBtn = //button[contains(text(),'Save') and @type='submit']
pbSaveBtn = //button[contains(text(),'Save') and @id='playbook-submit']
collectionSaveImageBtn = //button[contains(text(),'Save Image')]
newCollectionSaveBtn = //button[text()='Save' and @type='submit']
HomeAddNewPBbtn 	= //button[@id='btn-newChild']
SaveNewPB 			= //div[@class='modal-footer']/button[contains(text(),'Save')]
addNewCollection 	= //button[@id='btn-newCollection']
CollAddNewPBbtn 	= //button[@id='btn-new']
PlaybookDeactivateBtn = //button[@id='btn-deactivate']
PlaybookActivateBtn = //button[@id='btn-activate']
PlaybookMoveBtn = //button[@id='btn-move']
PlaybookReferencePBSelectBtn = //*[contains(text(),'Select')]
PBOptionMovetoCollectionSelectButton = //*[contains(text(),'Move to collection')]/..//button[contains(text(),'Select')]

//Step'sLogo/Icon
ActiontriggerLogo = //div/span[@class='fa-fw step-icon fa fa-bolt']
SendmailLogo = //div/span[@class='fa-fw step-icon fa fa-envelope-o']
NoTriggerLogo= //div/span[@class='fa-fw step-icon fa fa-check-square-o']
ReferencePlaybookLogo = //div/span[@class='fa-fw step-icon fa fa-sitemap']
PostActionLogo = //div/span[@class='fa-fw step-icon fa fa-sign-out']
InsertDataLogon = //div/span[@class='fa-fw step-icon fa fa-share-square-o']
	
//PlaybookStepsName
PlaybookStep = //span[text()='

//ActionTriggerInputRecordTypes
Action_trigger_InputRecord = //option[text()='

//DropDown
SelectActionTriggerInputRecord = //select[@id='resource-select']
InsertDataModelDropdown = //select[@id='collection']
PlaybookOptionMoveToCollectionNameDropDown = //*[contains(text(),'Move to collection')]/..//button[contains(text(),'Select')]/../..//span/span

//WebTable
PlaybookCollectionTable = //div[@class='ui-grid-contents-wrapper']/div[@role='grid']//div[@class='ui-grid-canvas']//div[@role='gridcell']/div
PlaybookTable = //div[@class='ui-grid-contents-wrapper']/div[@role='grid']//div[@class='ui-grid-canvas']//div[@role='gridcell']/div

//ImportExportPlaybookNameLink
AutomationImportPBCollectionSimple = //a[text()='AutomationImport_PlaybookCollection']
	
//****************************SystemConfiguration****************************************

//button
SystemConfigSaveBtn = //button[contains(text(),'Save') and @type='submit']
SystemConfigRevertBtn = //button[text()='Revert']
SystemConfigRevertThemeBtn = //button[@type='button' and text()='Revert Theme']
SystemConfigSMTPSetPasswordBtn = //*[text()='Set Password']

//Checkbox
CollapseNavigation =//input[@id='navigationCollapsed']
EmailNotificationChkBox = //*[@id='notificationEmail']
SystemConfigSmtpTLSChkBox = //*[text()=' Use TLS']/input[@type='checkbox' and @name='isSecure']

//IframeforRichText
SystemConfigLoginMessageFrame = //iframe[contains(@id,'ui-tinymce')]

//Textbox
SystemConfigLoginMessage = //body[@id='tinymce']
SystemConfigSMTPServer = //*[text()='Server']/..//input[@name='host']
SystemConfigSMTPPort = //*[text()='Port']/..//input[@name='smtpPort']
SystemConfigSMTPUsername = //*[text()='Username']/..//input[@name='bindName']
SystemConfigSMTPDefaultFrom = //*[text()='Default From']/..//*[@id='smtpFromAddress']
SystemConfigSMTPTimeout = //*[text()='Timeout (seconds)']/..//input[@id='timeout']
SystemConfigSMTPSetUserPassword = //*[text()='Set User Password']/..//input[@id='bindPassword']

//WebTable
RunningPlaybookTable = //div[@class='ui-grid-canvas']/div/div/div/div


//*****************************SystemConfiguration-AuditLog******************************
//TextBox
AuditLogSearchtxtbox = //*[@id='admin-pane']//*[text()='Audit Log']/../../../..//*[@id='search']

//Buttons
AuditLogSearchBtn = //*[@id='filter-button']

//Webtable
AuditLogTable = //*[contains(@id,'-uiGrid-')]/div

//DropDown
SelectModuleDropDown = //select[@id='moduleList']

//******************************************SecurityManagement-User**********************

//Webtable
UserTeamTable = //div[@id='teamsGrid']//div[starts-with(@class,'ui-grid-render-container')]//div[starts-with(@class,'ui-grid-cell-contents')]
UserRoleTable = //div[@id='rolesGrid']/div/div/div/div[contains(@class,'grid-render-container-body')]/div[contains(@class,'viewport')]/div/div/div/div/div
UserTable = //div[contains(@class,'ng-isolate-scope')]/div/div[@class='ui-grid-canvas']/div/div/div/div


//TextBox
UserFirstName = //input[@id='firstname' and not(contains(@class,'sm ng-empty'))]
UserLastName = //input[@id='lastname' and not(contains(@class,'sm ng-empty'))]
UserEmailId = //input[@id='email']
WorkPhoneTextBox = //input[@id='phone-phoneWork']
NewUserName = //input[@id='username']
ADUserSearchTxtBox = //*[@class='modal-body']//*[@id='search']

//textboxFilter
LastNameFilter = //input[@id='lastname']
FirstNameFilter = //input[@id='firstname']

//SelectDropDown
WorkPhoneDropDown = //select[@id='country-phoneWork']
HomePhoneDropDown = //*[@id='country-phoneHome']
MobilePhoneDropDown = //*[@id='country-phoneMobile']
FaxPhoneDropDown = //*[@id='country-phoneFax']

//button
AddNewUserBtn = //button[@id='add-btn' and @data-ng-click = 'gridOptions.csOptions.onAdd()']
SaveNewUserBtn = //button[@id='save-btn']
ImportFromADBtn = //*[@id='admin-pane']//button[text()='Import from Active Directory']
ADUserSearchBtn = //*[@class='modal-body']//*[@id='filter-button']
ResetPasswordBtn = //button[@id='reset-password-btn']
UserActiveBtn = //button[text()='Active']
UserInactiveBtn = //button[text()='Inactive']
UserUnlockedBtn = //button[text()='Unlocked']
UserLockedBtn = //button[text()='Locked']

//Checkbox
TeamForUserChkBox = //*[contains(text(),'Teams')]/..//*[contains(@id,'-0-uiGrid-')]//*[@role='button']
RoleForUserChkBox = //*[contains(text(),'Roles')]/..//*[contains(@id,'-0-uiGrid-')]//*[@role='button']

//Pans
AuthenticationPan = //*[@id='admin-pane']/div/div[1]/div/form/div[2]/div[2]/div[3]
2FactorAUthenticationPan = //*[text()='Edit 2-Factor Authentication settings']

//******************************************SecurityManagement-Teams**********************

//Header
TeamPageName = //*[@id='admin-pane']//h1[contains(text(),'Teams')]
ChnageRelationshipPageName = //*[contains(text(),'Change Relationships')]

//button
AddNewTeamBtn = //button[@id='add-btn' and contains(text(),'Add')]
CancelBtn = //button[@data-ng-click='exit()' and contains(text(),'Cancel')]
SaveLinkedTeamMemberBtn = //button[contains(text(),'Save') and @data-ng-click='save()' and @type='submit']
CancelLinkTeamMemberBtn = //button[contains(text(),'Cancel') and @data-ng-click='exit()']
OkayDelTeamBtn = //*[@id='btn-ok']
LinkTeamMemberBtn = //*[@id='link-btn'] 
AddNewTeamPopUpCancelBtn = //div[@class='modal-footer']/*[text()='Cancel']

//Textbox
TeamNameTxtBox = //form[@name='newForm']//input[@id='name']
TeamDescriptionTxtBox = //form[@name='newForm']//textarea[@id='description']
TeamDeleteText = //span[contains(text(),'Are you sure you want to remove the selected records')]
TeamMemeberName = //div[contains(text(),'CS')]
LinkedTeamMember = //*[contains(@id,'uiGrid-')]/div[contains(text(),'CS')]
ConfirmCloneTeamTxt = //*[contains(text(),'Are you sure you want to clone the selected records?')]
FilterFirstNameTeamTxtBox = //div[@class='noMargin ng-scope']//input[@id='firstname']
TeamNameErrorMsg = //*[@id='name']/../..//span[contains(text(),'This field is required')] 

//CheckBox
SelectAllRoleCheckBox = //div[@id='rolesGrid']//div[@class='ui-grid-top-panel']//div[@class='ng-scope']//*[@role='button']

//******************************************SecurityManagement-Roles**********************

//WebTable
UserPermissionTable = //div[@id='permissions']//div[@class='ui-grid-canvas']/div/div/div/div
UserPermissionChkBoxTable = //div[@id='permissions']//div[@class='ui-grid-canvas']/div/div/div/div//input
RoleListTable = //*[contains(@id,'-uiGrid-')]/div
PermissionRolesCompleteTable = //div[@id='permissions']//div[@class='ui-grid-canvas']/div
RolesFieldPermissionCompleteTable = //div[@class='modal-content']//div[@class='ui-grid-canvas']/div
RoleListNameDescriptionTable = //div[contains(@class,'ng-isolate-scope')]//div[@class='ui-grid-render-container ng-isolate-scope ui-grid-render-container-body']//div[@class='ui-grid-canvas']/div/div/div/div

//Need_to_give_the_Module_name_which_you_want_to_find_in_the_below_Role'sTable 
RolesListModuleNameColumnTable = //div[@id='permissions']//div[@class='ui-grid-canvas']//*[text()='

//Links
SetFieldPermissionLink = //*[contains(@id,'0-uiGrid')]//*[contains(@id,'-set-field-permission')]
FullFieldPermissionApplyToAllLink = //*[contains(@id,'-grid-container')]//*[text()='Full']/../..//*[text()='Apply to all']
ReadFieldPermissionApplyToAllLink = //*[contains(@id,'-grid-container')]//*[text()='Read Only']/../..//*[text()='Apply to all']
NoFieldPermissionApplyToAllLink = //*[contains(@id,'-grid-container')]//*[text()='No Access']/../..//*[text()='Apply to all']

//button
AllRolesAdd = //*[contains(@id,'-grid-container')]/div[1]/div/div/div/div/div/div[2]/div/div[3]/div/button/span[@class='fa fa-plus']
AllRolesRemove = //*[contains(@id,'-grid-container')]/div[1]/div/div/div/div/div/div[2]/div/div[3]/div/button/span[@class='fa fa-minus']
SaveFieldBtn = //*[@class='modal-content']//button[contains(text(),'Save')]

//Textbox
NameTxtBox = //*[@id='name']
DescriptionTxtBox = //*[@id='description']
ConfirmCancelTxt = //*[contains(text(),'You have unsaved changes. Do you wish to navigate away from this page')]
FilterRoleNameTxtBox = //input[@name='name']
RoleNameErrorMsg = //*[@id='name']/../..//span[contains(text(),'This field is required')]

//******************************************SecurityManagement-Appliances**********************

//Textbox
ApNameTxtbox = //*[@data-ng-show='initialized']//*[@id='name']
ApplianceNameFilterTxtBox = //*[@id='name']

//Checkbox
SelectTeamForAppliance = //*[contains(text(),'Teams')]/..//*[contains(@id,'-0-uiGrid-')]//*[@role='button']
SelectRoleForAppliance = //*[contains(text(),'Roles')]/..//*[contains(@id,'-0-uiGrid-')]//*[@role='button']

//button
ApSaveBtn = //*[@id='save-btn']
ApOkbutton = //button[contains(text(),'OK')]

//Text
ApSaveText = //*[contains(text(),'Please save these keys. There will be no way to ever see the private key again without regenerating new pairs.')]
ApPublicAPIKey = //*[contains(text(),'Public API Key')]
ApPrivateAPIKey = //*[contains(text(),'Private API Key')]

//Table
ApplianceTbl = //*[contains(@id,'-uiGrid-')]/div
ApplianceNoRecordsTbl = //div[text()='No Results']

//******************************************SecurityManagement-Authentication**********************

//Textboxes
AuthHostTxtBox = //*[@id='host']
AuthUserAttributeMap = //*[@id='userAttributeMap']
AuthUserSearchTxtBox = //*[@id='bindName']
AuthUserPasswdTxtBox = //*[@id='bindPassword']
AuthBaseDNTxtBox = //*[@id='baseDn']
AuthSearchAttributeTxtBox = //*[@id='searchAttributes']
AuthSearchCriteriaTxtBox = //*[@id='searchCriteria']
AuthSuccessSearchMsg = //*[@id='toast-container']//div[contains(text(),'Search executed successfully')]
AuthLdapPortTxt = //input[@id='port'] 

//Checkbox
AuthTLSChkBox = //*[@id='isSecure']
AuthAllowUsersChkBox = //*[@id='allowUserImport']
AuthAllow2FAUpdateChkBox = //*[contains(text(),'Allow 2FA Update')]/input
AuthAllowStatusUpdateChkBox = //*[contains(text(),'Allow Status Update')]/input

//Buttons
AuthSetPasswdBtn = //*[@id='admin-pane']//a[text()='Set Password']
AuthTestSearchBtn = //*[@id='admin-pane']//button[contains(text(),'Test Search')]
AuthSaveSettingsBtn = //*[@id='admin-pane']//button[contains(text(),'Save')]
AuthUserAttributeMapChangeEditorView = //*[@title='Switch editor mode']
AuthUserAttributeMapChangeEditorViewCodeMode = //*[@title='Switch to code highlighter']

//RadioButton
//--2-Factor-Radiobutton
RadioNo2FA = //*[text()='Edit 2-Factor Authentication settings']/../..//*[@data-ng-repeat='option in nfaOptions'][1]//input
Radio2FAVoice = //*[text()='Edit 2-Factor Authentication settings']/../..//*[@data-ng-repeat='option in nfaOptions'][2]//input
Radio2FASMS = //*[text()='Edit 2-Factor Authentication settings']/../..//*[@data-ng-repeat='option in nfaOptions'][3]//input 

//Link
AuthenticationLDAPConfig = //a[text()='LDAP Configuration']

//******************************ApplicationEditor-Modules**************************************************
//Dropdown
SelectModuleList = //*[@id='modules-select']

//Textbox
ModuleTypeTxtBox = //*[@id='propertyName']


//******************************ApplicationEditor-Picklist*************************************************

//DropDown
SelectPickList = //select[@id='picklist']

//TextBox
PicklistTitle = //input[@name='listName']
PicklistItem = //input[@id='newPicklistOption']

//button
PicklistItemOrderSortBtn = //button[@id='picklist-sort-alpha']
PickListRevertOrderItemBtn = //button[text()='Revert Order' and @aria-hidden='false']
DeleteFirstPicklistItemBtn = //li[@id='draggable-item-all0']//span[@role='button' and @data-ng-show='permission.delete']
DeleteSecondPicklistItemBtn = //li[@id='draggable-item-all1']//span[@role='button' and @data-ng-show='permission.delete']

//******************************ApplicationEditor-Navigation*************************************************

//Checkbox
NavigationModulesChkbox = //*[@id='admin-pane']//div[@data-ng-repeat='module in moduleLinks']/label/input

//Button
AddAsGroup = //div[contains(@class,'tab-pane ng-scope active')]//*[@id='add-module-to-group']
AddAsMenu = //div[contains(@class,'tab-pane ng-scope active')]//*[@id='add-module-as-group']

//MenuItems
UntitledGroup = //*[@id='navigation-list']/ul//span[text()='Untitled']
UntitledGroupIcon = //*[@id='navigation-list']/ul//span[text()='Untitled']/../../div[1]/span
//******************************Events**************************************************

//button
EventsAddBtn = //button[@id='add-btn' and @class='list-action btn btn-sm btn-primary ng-scope']
AddEventSaveBtn = //button[contains(text(),'Save') and @type='button']
EventDeleteBtn = //button[@id='delete-btn']
EventYesBtn = //button[@id='btn-yes']
EventOkBtn = //button[@id='btn-ok']
EventNoBtn = //button[@id='btn-no']
EventCancelBtn = //button[@id='btn-cancel']
NewEventCancelBtn = //button[@id='module-form-cancel-btm']
EditEventBtn = //button[@id='breadcrumb-actions-edit']
EditDropDownBtn = //*[@id='breadcrumb-actions-more']
EditEventCloneBtn = //div[@class='cache-breadcrumb']//a[text()='Clone']
SaveCloneBtn = //form[@name='newForm']//button[text()='Save']
SaveIndicatorEventBtn = //div[@class='modal-content']//button[text()='Save']
LinkEventBtn = //*[@id='link-btn']

//Textbox
AddEventName = //input[@id='name']
AddEventAlert = //input[@id='alert']
AddEventSourceId = //input[@id='sourceId']
AddEventSource = //input[@id='source']
EventSourceIdFilter = //input[@id='sourceId' and @type='text']
AddIndicatorEventName = //form//*[@id='value']
FilterIndicatorEventName = //div[@role='rowgroup']//*[@id='value']
FilterLinkIndicatorEvent = //div[@class='modal-content']//div[@role='rowgroup']//*[@id='value']

//Webtable

EventTable =//div[contains(@class,'ng-isolate-scope')]/div/div[@class='ui-grid-canvas']/div/div/div/div
EventTableCheckBox = //div[contains(@class,'left ui-grid-render-container')]/div[contains(@class,'viewport')]/div/div/div/div/div/div/div/div
EventIndicatorTbl = //*[contains(@id,'-uiGrid-')]/div
EventIndicatorChkTbl = //*[contains(@id,'-uiGrid-')]/div/div/div
NoRecordsTbl = //*[@id='main-view-template']//div[text()='No Results']


//Tabs
RelatedRecordTab = //*[@id='main-view-template']//a[text()='Related Records']
ExpandRecordsOption = //*[@id='relationships-tab-show-more']/span
IndicatorRecordOption = //*[contains(@id,'relationships-tab-') and contains(text(),'Indicators')]
EventRecordOption = //*[contains(@id,'relationships-tab-') and contains(text(),'Events')]


//ErrorMessages/textmessages
NewEventSourceIdErrorMessage = //label[@for='sourceId']/following-sibling::div[@class='ng-isolate-scope']/div[@aria-hidden='false']/span
CloneEventHeaderText = //h3[text()='Clone Event']

//****************************Alerts****************************************

//Button
AlertsAddBtn = //button[@id='add-btn' and @class='list-action btn btn-sm btn-primary ng-scope']
AlertCalendar = //button[@id='dueDate-calendar-btn']
AlertCalendarSelToday = //button[text()='Today']
AlertCalendarSelNow = //button[text()='Now']
AlertCalendarSelClose = //button[text()='Close']
AddAlertSaveBtn = //button[contains(text(),'Save') and @type='button']

//TextBox
AddAlertsName = //input[@id='name']
AlertDescription = //body[contains(@id,'tinymce')]
AddAlertSourceId = //input[@id='sourceId']
AddAlertSource = //input[@id='source']
AddAlertOrigin = //input[@id='origin']
AlertSourceFilter = //input[@id='source' and @type='text']


//IframeforRichText
AlertsDescriptionFrame = //iframe[contains(@id,'ui-tinymce')]

//DropDownlist
AlertSeverity = //select[@id='severity']
AlertStatus = //select[@id='status']
AlertType = //select[@id='type']

//WebTable
AlertTable =//div[contains(@class,'ng-isolate-scope')]/div/div[@class='ui-grid-canvas']/div/div/div/div


//*****************************Incidents**************************

//Buttons
IncidentsAddBtn = //button[@id='add-btn' and @class='list-action btn btn-sm btn-primary ng-scope']
DateOfIncidentCalendarBtn = //button[@id='dateOfIncident-calendar-btn']
DiscoveredDateCalendarBtn = //button[@id='discoveredOn-calendar-btn']
IncidentsCalendarSelToday = //button[text()='Today']
IncidentsCalendarSelNow = //button[text()='Now']
IncidentsCalendarSelClose = //button[text()='Close']
AddIncidentsSaveBtn = //button[contains(text(),'Save') and @type='submit']

//TextBox
AddIncidentsName = //input[@id='name']
IncidentsDescription = //body[contains(@id,'tinymce')]
AddIncidentsOriginPoint = //input[@id='originPoint']
AddIncidentsIncidentLead = //input[@id='incidentLead']
AddIncidentsDwellTime = //input[@id='dwellTime']
AddIncidentsContainmentTime = //input[@id='containmentTime']
AddIncidentsRecoveryTime = //input[@id='recoveryTime']
IncidentsNameFilter = //input[@id='name' and @type='text']

//IframeRichText
IndcidentsDescriptionFrame = //iframe[contains(@id,'ui-tinymce-0')]

//DropDownList
IncidentsPhase = //select[@name='phase']
IncidentsStatus = //select[@name='status']
IncidentsConfirmation = //select[@name='confirmation']
IncidentsConfidence = //select[@name='confidence']
IncidentsSeverity = //select[@name='severity']
IncidentsCategory = //select[@name='category']
IncidentsSource = //select[@name='source']

//WebTable
IncidentsTable = //div[contains(@class,'ng-isolate-scope')]/div/div[@class='ui-grid-canvas']/div/div/div/div

//**********************************Tasks**************************

//button
TasksAddBtn = //button[@id='add-btn' and @class='list-action btn btn-sm btn-primary ng-scope']
TaskAssignedOn = //button[@id='assignedOnDate-calendar-btn']
TaskDueDate = //button[@id='dueDate-calendar-btn']
TaskStartDate = //button[@id='startDate-calendar-btn']
TaskCompletedOn = //button[@id='completedOnDate-calendar-btn']
TasksCalendarSelToday = //button[text()='Today']
TasksCalendarSelNow = //button[text()='Now']
TasksCalendarSelClose = //button[text()='Close']
AddTasksSaveBtn = //button[contains(text(),'Save') and @type='submit']

//TextBox
AddTasksName = //input[@id='name']
TasksDescription = //body[contains(@id,'tinymce')]
AddTasksActualMinutes = //input[@id='actualMinutes']
TaskNameFilter = //input[@id='name' and @type='text']

//DropDownList
TasksStatus = //select[@name='status']
TasksPriority = //select[@name='priority']
TasksType = //select[@id='type']

//IframeRichText
TasksDescriptionFrame = //iframe[contains(@id,'ui-tinymce-0')]

//Webtable
TasksTable = //div[contains(@class,'ng-isolate-scope')]/div/div[@class='ui-grid-canvas']/div/div/div/div



//**********************************RuleEngine****************************

//button
addNewRuleCollection = //button[@id='btn-newCollection']
AddActionbtn = //button[@name='addActionButton']
EmailTemplateSaveBtn = //div[@class='modal-footer']/button[text()='Save']
EmailTemplateAddRecipient = //button[@data-ng-click='addSelectedRecipients()']
SendMailSelectRecipient = //button[text()='Select Recipients']
SaveSelectedRecipientBtn = //div[@class='modal-footer']/button[text()='Save']
SaveRuleBtn = //button[@data-ng-click='save()' and @data-ng-show='canUpdate']

//TextboxFilter
RuleSearchboxFilter = //div[contains(@class,'input-group-sm')]/input[@id='search']

//Webtable
RuleCollectionTable = //div[contains(@class,'ng-isolate-scope')]/div/div[@class='ui-grid-canvas']/div
RunningRuleTable = //div[@class='ui-grid-canvas']/div/div/div/div

//DropDown
SelectTriggerResource = //select[@name='trigger-resource']
SelectTriggerAction = //select[@name='trigger-action']
SelectActionType = //select[@name='trigger-resource-0' and @data-ng-model='action.type']
SelectEmailTemplate = //select[@name='emailTemplate']

//Textbox
NewEmailTemplateName = //div[@class='modal-body']/div/div/div/input[@id='name']
NewEmailTemplateSubject = //div[@class='modal-body']/div/div/div/input[@id='subject']
NewEmailTemplateContent = //body[@class='mce-content-body']
RuleCollectionNameText = //div[@class='ng-isolate-scope']/span[@id='view-name']

//IframeRichText
EmailTemplateContentFrame = //body[@id='tinymce']

//Checkbox
EmailRecipientsSelection = //div[contains(@class,'ng-isolate-scope')]/div/div[@class='ui-grid-canvas']/div

//***************************QuickAdd********************************

//Leftpane 
QAIncidentLink = //*[@id='module-list']//a[contains(text(),'Incidents')]
QATaskLink = //*[@id='module-list']//a[contains(text(),'Tasks')]
QAAssetLink = //*[@id='module-list']//a[contains(text(),'Assets')]
QAAlertLink = //*[@id='module-list']//a[contains(text(),'Alerts')]
QAIndicatorLink = //*[@id='module-list']//a[contains(text(),'Indicators')]
QAAttachmentLink = //*[@id='module-list']//a[contains(text(),'Attachments')]
QAScanLink = //*[@id='module-list']//a[contains(text(),'Scans')]
QAWizard = //*[@id='quick-form']
QACompaniesLink = //*[@id='module-list']//a[contains(text(),'Companies')]


//Textbox
QANameField = //*[@id='quick-form']//*[@id='name']
QANameFieldErrorMsg = //*[@id='quick-form']//*[@id='name']/../..//span[contains(text(),'This field is required')]
QAPhaseField = //*[@id='quick-form']//*[@id='phase']
QAPhaseFieldErrorMsg = //*[@id='quick-form']//*[@id='phase']/../../..//span[contains(text(),'This field is required')]
QAStatusField = //*[@id='quick-form']//*[@id='status']
QAStatusFieldErrorMsg = //*[@id='quick-form']//*[@id='status']/../../..//span[contains(text(),'This field is required')]
QAMaxLenghtErrorMsg = //*[@id='quick-form']//*[@id='name']/../..//span[contains(text(),'Cannot be more than 255 characters')]
QAAssignedPersonField = //*[@id='quick-form']//*[@id='assignedToPerson']
QAScanId = //div[@id='quick-form']//*[@name='scanId']
#QAAssignedToField = //*[@id='quick-form']//*[@id='assignedTo']

//Buttons
QAMoreOptionsLink = //*[@id='quick-form']//*[contains(text(),'More Options')]
QACancelBtn = //*[@id='quick-form']//*[contains(text(),'Cancel')]
QAAddnOpenBtn = //*[@id='quick-form']//*[contains(text(),'Add & Open')]
QAAddBtn = //*[@id='quick-form']//*[text()='Add']
QAAssignedPersonField = //button[contains(text(),'Assigned Person')]
QAAssignedToField = //button[contains(text(),'Assigned To')]
//Dropdown
QADropdown = //*[@id='quick-add-dropdown']

//AlertOptionalFields
//QARemainingInfoBody = //*[@id='tinymce']
QARemainingInfoBody = //*[@id='quick-form']//*[contains(@id,'mceu_') and @class='mce-tinymce mce-container mce-panel']//iframe[contains(@id,'ui-tinymce')]
QALatLongTxtBox = //*[@id='quick-form']//*[@id='latLong']
QACityTxtBox = //*[@id='quick-form']//*[@id='cityGeo']
QARegionTxtBox = //*[@id='quick-form']//*[@id='regionGeo']
QACountryCodeTxtBox = //*[@id='quick-form']//*[@id='countryCode']
QACountryTxtBox = //*[@id='quick-form']//*[@id='countryGeo']
QAComponentIdTxtBox = //*[@id='quick-form']//*[@id='componentId']
QAFlowIdTxtBox = //*[@id='quick-form']//*[@id='flowId']
QAComponentTimestampTxtBox = //*[@id='quick-form']//input[@name='componentTimestamp']
QAMACResponderTxtBox = //*[@id='quick-form']//*[@id='macResponder']
QAMACInitiatorTxtBox = //*[@id='quick-form']//*[@id='macInitiator']
QAAppHierarchyTxtBox = //*[@id='quick-form']//*[@id='applicationHierarchy']
QAApplicaionTxtBox = //*[@id='quick-form']//*[@id='application']
QACategoryRulesTxtBox = //*[@id='quick-form']//*[@id='categoryRules']
QAMsgRuleTxtBox = //*[@id='quick-form']//*[@id='messageRules']
QAActionRuleTxtBox = //*[@id='quick-form']//*[@id='actionRules']
QAPortResponderTxtBox = //*[@id='quick-form']//*[@id='portResponder']
QAPortInitiatorTxtBox = //*[@id='quick-form']//*[@id='portInitiator']
QAIPResponderTxtBox = //*[@id='quick-form']//*[@id='ipResponder']
QAIPInitiatorTxtBox = //*[@id='quick-form']//*[@id='ipInitiator']
QASourceIdTxtBox = //*[@id='quick-form']//*[@id='sourceId']
QASourceTxtBox = //*[@id='quick-form']//*[@id='source']
QAOriginTxtBox = //*[@id='quick-form']//*[@id='origin']
QADueDateTxtBox = //*[@id='quick-form']//input[@name='dueDate']
QALevelRuleSelectBox = //*[@id='quick-form']//*[@id='levelRules']
QATypeSelectBox = //*[@id='quick-form']//*[@id='type']
QASeveritySelectBox = //*[@id='quick-form']//*[@id='severity']
QAAssignedToName = //*[contains(@id,'typeahead-')]/a
